{"version":3,"sources":["Components/Shared Components/nav.js","Components/WelcomPage.js","Components/Dashboard/Dashboarditem.js","Actions/projectActions.js","Actions/types.js","Components/Dashboard/dashboard.js","Components/Dashboard/operations/createwallet.js","Components/Shared Components/NotFound.js","reducer/errorReducer.js","reducer/walletReducer.js","reducer/Rootreducer.js","store.js","Components/Dashboard/operations/updatewallet.js","Components/Transaction/transaction.js","Components/Transaction/transactionoperations.js/AddTransaction.js","App.js","serviceWorker.js","index.js"],"names":["nav","className","to","type","data-toggle","data-target","id","href","Component","WelcomPage","Dashboarditem","deleteBtnClick","window","confirm","props","deleteWallets","wallet","this","AccountNumber","Balanceamount","onClick","connect","dispath","a","axios","delete","then","res","payload","dashboard","state","totalBalance","nextProps","wallets","totalBal","i","length","currentBalace","setState","getWallets","aria-haspopup","aria-expanded","disabled","get","data","createwallet","changeHandler","event","fieldName","State","target","value","submitHandler","newWallet","Accountname","Accountnumber","description","priority","Createwallet","history","preventDefault","errors","onSubmit","onChange","placeholder","post","push","catch","err","dispatchEvent","response","NotFound","class","initialState","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","Updatewallet","updatedwallet","getWallet","match","params","GET_WALLET","update","put","transaction","scope","AddTransaction","checkbox","checked","handleSubmit","newtransaction","amount","createtransactiions","min","htmlFor","selected","walletid","newTransaction","App","path","component","exact","updatewallet","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c88ad008.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link}from 'react-router-dom';\r\n\r\n class nav extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Expense Manager\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link \" href=\"register.html\">\r\n                            Sign Up\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"login.html\">\r\n                            Login\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default nav\r\n","import React, { Component } from 'react'\r\n\r\nclass WelcomPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Expense Manager</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to manage your daily expense and hisab kitab\r\n                            </p>\r\n                            <hr />\r\n                            <a href=\"register.html\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                Sign Up\r\n                            </a>\r\n                            <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                Login\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default WelcomPage\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {deleteWallets} from '../../Actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\n\r\nclass Dashboarditem extends Component {\r\n    deleteBtnClick = ()=>{\r\n   \r\n           if(window.confirm(\"Are YOu sure, you want to delete the account\")){\r\n\r\n            this.props.deleteWallets(this.props.wallet.id)\r\n\r\n           }\r\n    }\r\n    render() {\r\n        const wallet= this.props.wallet\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-lg-4 col-md-3 col-6\">\r\n                            <h3>{wallet.AccountNumber}</h3>\r\n                            <p>Account Number: </p>\r\n                            <p>Description: {}</p>\r\n                            </div>\r\n                        <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                            <h3>Balance</h3>\r\n                            <h1>{wallet.Balanceamount}</h1>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12 d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to ={`/Transaction/${wallet.id}`}>\r\n                                    <li className=\"list-group-item board text-success\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> View Transactions </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updatewallet/`}>\r\n                                    <li className=\"list-group-item update text-info\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to=\"/dashboard\" onClick= {()=>this.deleteBtnClick()}>\r\n                                    <li className=\"list-group-item delete text-danger\">\r\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\r\n                                    </li>\r\n                                </Link>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{deleteWallets})(Dashboarditem)\r\n","/* eslint-disable no-undef */\r\nimport axios from 'axios'\r\nimport {GET_ERRORS,GET_WALLETS, DELETE_WALLETS} from './types'\r\n\r\nexport const Createwallet = (newWallet,history)=> async dispath =>{\r\n\r\n   await axios.post('/wallet',newWallet).then((res)=>{\r\n      history.push('/dashboard')\r\n\r\n    }).catch((err)=>{\r\n       dispatchEvent({type:GET_ERRORS,payload:err.response.data})\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const getWallets = ()=> async dispath =>{\r\n\r\n    await axios.get('/wallet').then((res)=>{\r\n       dispath({ type:GET_WALLETS,payload:res.data })\r\n \r\n     })\r\n \r\n \r\n }\r\n export const getWallet = ()=> async dispath =>{\r\n\r\n    await axios.get(`/wallet/${id}`).then((res)=>{\r\n       dispath({ type:GET_WALLET,payload:res.data })\r\n \r\n     })\r\n \r\n \r\n }\r\n\r\n export const deleteWallets = ()=> async dispath =>{\r\n\r\n    await axios.delete(`/wallet/${id}`).then((res)=>{\r\n       dispath({ type:DELETE_WALLETS,payload:id})\r\n \r\n     })\r\n \r\n \r\n }\r\n \r\nexport const update = (id,updatedwallet,history)=> async dispath =>{\r\n\r\n    await axios.put(`/wallet/${id}`,updatedwallet).then((res)=>{\r\n       history.push('/dashboard')\r\n \r\n     }).catch((err)=>{\r\n        dispatchEvent({type:GET_ERRORS,payload:err.response.data})\r\n \r\n     })\r\n \r\n \r\n \r\n \r\n }\r\n\r\n //Transactions\r\n\r\n export const createtransactiions = (newtransaction,history,walletid)=> async dispath =>{\r\n\r\n   await axios.post(`http://localhost:8080/transaction/${walletid}`,newTransaction).then((res)=>{\r\n      history.push(`/transaction/${walletid}`)\r\n\r\n    }).catch((err)=>{\r\n       dispatchEvent({type:GET_ERRORS,payload:err.response.data})\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n \r\n","export const GET_ERRORS = 'GET_ERRORS'\r\n\r\n\r\nexport const GET_WALLETS = 'GET_WALLETS';\r\nexport const DELETE_WALLETS = 'DELETE_WALLETS';\r\nexport const GET_WALLET = 'GET_WALLET';\r\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getWallets} from '../../Actions/projectActions'\r\nimport Dashboarditem from './Dashboarditem'\r\n\r\n class dashboard extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              totalBalance:0.0\r\n         }\r\n     }\r\n     \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.wallets){\r\n            let totalBal = 0;\r\n            for(let i=0; i<nextProps.wallets.length;i++){\r\n                 totalBal =  totalBal+nextProps.wallets[i].currentBalace\r\n\r\n            }\r\n            this.setState({totalBalance:totalBal})\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n     componentDidMount(){\r\n        this.props.getWallets()\r\n\r\n     }\r\n    render() {\r\n        \r\n        \r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">My Wallets</h1>\r\n                            <br />\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-info btn-lg dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Create new\r\n                            </button>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/createwallet\">Wallet</Link>\r\n                                    <button disabled className=\"dropdown-item\">Transaction</button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h4>Current Balance (Total)</h4>\r\n                                    <h1>Rs.{this.state.totalBalance}</h1>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            {\r\n                                //<!-- Project Item Component -->\r\n                            }\r\n\r\n                            <Dashboarditem />\r\n                            <Dashboarditem />\r\n                            \r\n\r\n                            {\r\n                                //  <!-- End of Project Item Component -->\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n                        \r\n                        }\r\n                    }\r\n\r\n   const mapStateToProps = (state) =>   ({\r\n        wallets:state.wallet.wallets\r\n\r\n   })\r\n \r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{getWallets})(dashboard)\r\n","import React, { Component } from 'react'\r\nimport {Createwallet} from '../../../Actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass createwallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Accountname: '',\r\n            Accountnumber: '',\r\n            description: '',\r\n            priority: '',\r\n            errors:'',\r\n\r\n        }\r\n    }\r\n     componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n\r\n            this.setState({errors:nextProps.errors})\r\n\r\n        }\r\n\r\n\r\n     }\r\n    changeHandler = (event, fieldName) => {\r\n        this.State({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n    submitHandler = (event) => {\r\n        const newWallet = {\r\n            Accountname: this.state.Accountname,\r\n            Accountnumber: this.state.Accountnumber,\r\n            description: this.state.description,\r\n            priority: this.state.priority,\r\n        }\r\n       this.props.Createwallet(newWallet,this.props.history)\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event)=>this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"Accountname\")} className=\"form-control form-control-lg \" placeholder=\"Account Name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Accountname}</p>\r\n                                    </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"Accountnumber\")} className=\"form-control form-control-lg\" placeholder=\"Accountnumber\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Accountnumber}</p>\r\n                                    </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(event) => this.changeHandler(event, \"description\")} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                                    </div>\r\n                                <div className=\"form-group\">\r\n                                    <select onChange={(event) => this.changeHandler(event, \"priority\")} className=\"form-control form-control-lg\">\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                    <p className=\"text-danger\">{this.state.errors.priority}</p>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state)=> ({\r\n\r\n  errors: state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{Createwallet})(createwallet)\r\n","import React, { Component } from 'react'\r\nimport {Link}  from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"error-template\">\r\n                            <h1>\r\n                                Oops!</h1>\r\n                            <h2>\r\n                                404 Not Found</h2>\r\n                            <div className=\"error-details\">\r\n                                Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                            <div className=\"error-actions\">\r\n                                <Link to=\"/\" className=\"btn btn-primary btn-lg\"><span class=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import {GET_ERRORS} from '../Actions/types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n\r\n        case GET_ERRORS: \r\n        return action.payload;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","\r\nimport {GET_WALLETS, DELETE_WALLETS, GET_WALLET} from '../Actions/types'\r\n\r\nconst initialState = {\r\nwallets: {},\r\nwallet:''\r\n\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n\r\n        case GET_WALLETS: \r\n        return {...state,wallets:action.payload};\r\n        \r\n        case DELETE_WALLETS:\r\n            return{...state,wallets:state.wallets.filter(x=>x.id!==action.payload)};\r\n\r\n            case GET_WALLET:\r\n                return {...state,wallet:action.payload}\r\n    \r\n        default:\r\n            return state;\r\n\r\n           \r\n\r\n   \r\n   \r\n            }\r\n\r\n\r\n\r\n}","import {combineReducers} from 'redux'\r\nimport errorReducer from './errorReducer'\r\nimport walletReducer from './walletReducer'\r\n\r\nexport default combineReducers({\r\n\r\nerrors: errorReducer,\r\nwallet:walletReducer\r\n\r\n    \r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducer/Rootreducer'\r\n\r\nconst initialState = {}\r\nconst middleWare = [thunk]\r\nlet store;\r\n\r\n//if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  //  store = createStore(rootReducer,\r\n    //    initialState,\r\n      //  compose(applyMiddleware(...middleWare),\r\n        //    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          //  window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        //))\r\n//} else {\r\n    store = createStore(rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleWare)))\r\n//}\r\n\r\nexport default store;","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getWallet,update} from '../../../Actions/projectActions'\r\n\r\nclass Updatewallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            Accountname: '',\r\n            Accountnumber: '',\r\n            description: '',\r\n            priority: '',\r\n            errors: '',\r\n\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n\r\n            this.setState({ errors: nextProps.errors })\r\n\r\n        }\r\n\r\n        if (nextProps.wallet) {\r\n            this.setState({\r\n                id: nextProps.wallet.id,\r\n                Accountname: nextProps.wallet.Accountname,\r\n                Accountnumber: nextProps.wallet.Accountnumber,\r\n                description: nextProps.wallet.description,\r\n                priority: nextProps.wallet.priority,\r\n\r\n\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n    submitHandler = (event) => {\r\n        const updatedwallet = {\r\n            id:this.state.id,\r\n            Accountname: this.state.Accountname,\r\n            Accountnumber: this.state.Accountnumber,\r\n            description: this.state.description,\r\n            priority: this.state.priority,\r\n        }\r\n        this.props.Updatewallet(this.state.id,updatedwallet,this.props.history)\r\n\r\n        event.preventDefault()\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.getWallet(this.props.match.params.id)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">UPDATE Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event) => this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.Accountname} onChange={(event) => this.changeHandler(event, \"Accountname\")} className=\"form-control form-control-lg \" placeholder=\"Account Name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Accountname}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.Accountnumber}  onChange={(event) => this.changeHandler(event, \"Accountnumber\")} className=\"form-control form-control-lg\" placeholder=\"Account No\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.Accountnumber}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={this.state.description}  onChange={(event) => this.changeHandler(event, \"description\")} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select value={this.state.priority}  onChange={(event) => this.changeHandler(event, \"priority\")} className=\"form-control form-control-lg\">\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                    <p className=\"text-danger\">{this.state.errors.priority}</p>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Update\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    errors: state.errors,\r\n    wallet: state.wallet.wallet\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { getWallet,update})(Updatewallet)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass transaction extends Component {\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        return (\r\n           \r\n            <div className=\"container\">\r\n            <Link to = \"/Dashboard\" className=\"btn btn-default btn-lg mb-3\">\r\n                Back\r\n            </Link>\r\n            <Link to ={`/Trans/add/${id}`} className=\"btn btn-info btn-lg mb-3\">\r\n                <i className=\"fas fa-plus-circle\"> Record new Transaction</i>\r\n            </Link>\r\n            <br />\r\n            <div className=\"card text-center\">\r\n                <div className=\"card-header bg-success text-white\">\r\n                    <h4>UBL Account Balance</h4>\r\n                    <h1>Rs. 27000</h1>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n         \r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                  <tr>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr className=\"table-danger\">\r\n                    <td>2020-04-15</td>\r\n                    <td>PTCL Bill</td>\r\n                    <td className=\"text-danger\">-3000</td>\r\n                    <td>\r\n                        <a className=\"text-info\" href=\"updatetransactionForm.html\"><i className=\"fas fa-edit fa-2x\"></i></a> \r\n                        <span className=\"text-danger\"><i className=\"fas fa-trash fa-2x\"></i></span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"table-success\">\r\n                    <td>2020-04-01</td>\r\n                    <td>Income</td>\r\n                    <td className=\"text-success\">+30000</td>\r\n                    <td>\r\n                        <a className=\"text-info\" href=\"updatetransactionForm.html\"><i className=\"fas fa-edit fa-2x\"></i></a> \r\n                        <span className=\"text-danger\"><i className=\"fas fa-trash fa-2x\"></i></span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n    \r\n           \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default transaction\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {createtransactiions} from '../../../Actions/projectActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTransaction extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             amount:'',\r\n             description:'',\r\n             type:'',\r\n        }\r\n    }\r\n    changeHandler = (event,fieldName,checkbox) =>{\r\n        this.setState({\r\n            [fieldName]: checkbox ? event.target.checked : event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        let newtransaction = {amount:this.state.amount,description:this.state.description,type:this.state.type};\r\n        this.props.createtransactiions(newtransaction,this.props.history,this.props.match.params.id)\r\n        event.preventDefault();\r\n      }\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        const {amount,description,type} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to = {`/transaction/${id}`} className=\"btn btn-light\">\r\n                            Back to Wallet\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Record New Transaction</h4>\r\n                        <p className=\"lead text-center\">UBL Account</p>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input value={amount} onChange={event=>this.changeHandler(event,\"amount\",false)} type=\"number\" min=\"1\" className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea value={description} onChange={event=>this.changeHandler(event,\"description\",false)} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input value={type} onChange={event=>this.changeHandler(event,\"type\",false)} checked className=\"form-check-input\" type=\"radio\"  id=\"income\"  selected=\"false\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input onChange={event=>this.changeHandler(event,\"type\",false)} className=\"form-check-input\" type=\"radio\"  id=\"expense\" value=\"EXPENSE\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                </div>\r\n                            </div>\r\n                          \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{createtransactiions}) (AddTransaction)\r\n","import React from 'react';\n\nimport './App.css';\nimport nav from './Components/Shared Components/nav';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport WelcomPage from './Components/WelcomPage';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport dashboard from './Components/Dashboard/dashboard';\nimport createwallet from './Components/Dashboard/operations/createwallet';\nimport NotFound from './Components/Shared Components/NotFound';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport updatewallet from './Components/Dashboard/operations/updatewallet';\nimport transaction from './Components/Transaction/transaction';\nimport AddTransaction from './Components/Transaction/transactionoperations.js/AddTransaction';\nimport 'react-app-polyfill/stable';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n   <BrowserRouter>\n   <Route path = \"/\" component ={nav} />\n    <Switch>\n    <Route path=\"/\" exact component =  {WelcomPage} />\n    <Route path=\"/Dashboard\" exact component={dashboard} />\n    <Route path=\"/createwallet\" exact component={createwallet} />\n    <Route path=\"/\" component={NotFound} />\n    <Route path=\"/updatewallet/:id\" exact component = {updatewallet} />\n    <Route path=\"/Transaction/:id\" exact component={transaction} />\n    <Route path=\"/Trans/add/:id\" exact component={AddTransaction} />\n    </Switch>\n  \n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}